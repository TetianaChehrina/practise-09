{"version":3,"file":"commonHelpers2.js","sources":["../src/js/main.js"],"sourcesContent":["// Якщо імейл і пароль користувача збігаються, зберігай дані з форми при сабміті\n// у локальне сховище і змінюй кнопку login на logout і роби поля введення\n// недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nimport './promise.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\nconst STORAGEKEY = 'form-data';\nconst form = document.querySelector('#login-form');\nconst inputs = document.querySelectorAll('.login-input');\nconst button = document.querySelector('.login-btn');\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n  if (button.textContent === 'Logout') {\n    localStorage.removeItem(STORAGEKEY);\n    form.reset();\n    inputs.forEach(input => input.removeAttribute('readonly'));\n    button.textContent = 'Login';\n    return;\n  }\n\n  const emailValue = event.target.elements.email.value.trim();\n  const passwordValue = event.target.elements.password.value.trim();\n  if (emailValue === '' || passwordValue === '') {\n    iziToast.warning({\n      message: `Fill all fields`,\n      position: 'topRight',\n    });\n    return;\n  }\n\n  if (emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n    iziToast.warning({ message: `Incorrect data`, position: 'topRight' });\n    return;\n  }\n\n  localStorage.setItem(\n    STORAGEKEY,\n    JSON.stringify({ email: emailValue, password: passwordValue })\n  );\n  button.textContent = 'Logout';\n  inputs.forEach(input => input.setAttribute('readonly', true));\n}\n\nconst saveData = localStorage.getItem(STORAGEKEY);\n\nif (saveData) {\n  const parsedData = JSON.parse(saveData);\n\n  inputs[0].value = parsedData.email || '';\n  inputs[1].value = parsedData.password || '';\n\n  button.textContent = 'Logout';\n  inputs.forEach(input => input.setAttribute('readonly', true));\n}\n"],"names":["USER_DATA","STORAGEKEY","form","inputs","button","handlerSubmit","event","input","emailValue","passwordValue","iziToast","saveData","parsedData"],"mappings":"+EAeA,MAAMA,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EACMC,EAAa,YACbC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAS,SAAS,iBAAiB,cAAc,EACjDC,EAAS,SAAS,cAAc,YAAY,EAClDF,EAAK,iBAAiB,SAAUG,CAAa,EAE7C,SAASA,EAAcC,EAAO,CAE5B,GADAA,EAAM,eAAc,EAChBF,EAAO,cAAgB,SAAU,CACnC,aAAa,WAAWH,CAAU,EAClCC,EAAK,MAAK,EACVC,EAAO,QAAQI,GAASA,EAAM,gBAAgB,UAAU,CAAC,EACzDH,EAAO,YAAc,QACrB,MACD,CAED,MAAMI,EAAaF,EAAM,OAAO,SAAS,MAAM,MAAM,OAC/CG,EAAgBH,EAAM,OAAO,SAAS,SAAS,MAAM,OAC3D,GAAIE,IAAe,IAAMC,IAAkB,GAAI,CAC7CC,EAAS,QAAQ,CACf,QAAS,kBACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,GAAIF,IAAeR,EAAU,OAASS,IAAkBT,EAAU,SAAU,CAC1EU,EAAS,QAAQ,CAAE,QAAS,iBAAkB,SAAU,UAAU,CAAE,EACpE,MACD,CAED,aAAa,QACXT,EACA,KAAK,UAAU,CAAE,MAAOO,EAAY,SAAUC,EAAe,CACjE,EACEL,EAAO,YAAc,SACrBD,EAAO,QAAQI,GAASA,EAAM,aAAa,WAAY,EAAI,CAAC,CAC9D,CAEA,MAAMI,EAAW,aAAa,QAAQV,CAAU,EAEhD,GAAIU,EAAU,CACZ,MAAMC,EAAa,KAAK,MAAMD,CAAQ,EAEtCR,EAAO,CAAC,EAAE,MAAQS,EAAW,OAAS,GACtCT,EAAO,CAAC,EAAE,MAAQS,EAAW,UAAY,GAEzCR,EAAO,YAAc,SACrBD,EAAO,QAAQI,GAASA,EAAM,aAAa,WAAY,EAAI,CAAC,CAC9D"}